rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function user() { return request.auth != null ? get(/databases/$(database)/documents/users/$(request.auth.uid)).data : null; }
    function isAdmin() { return user() != null && user().role == 'admin'; }
    function isSupervisor() { return user() != null && user().role == 'supervisor'; }
    function sameRegion(doc) { return user() != null && user().regionId == doc.data.regionId; }

    match /users/{uid} {
      allow read: if isAdmin() || request.auth != null && request.auth.uid == uid;
      allow write: if isAdmin();
    }
    match /employees/{id} {
      allow read: if isAdmin() || (isSupervisor() && sameRegion(resource));
      allow write: if isAdmin();
    }
    match /monthlyEntries/{id} {
      allow read: if isAdmin() || (isSupervisor() && sameRegion(resource));
      allow create, update: if isAdmin() || (isSupervisor() && sameRegion(request.resource));
      allow delete: if isAdmin();
    }
    match /settings/{id} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }
    match /regions/{id} {
      allow read: if isAdmin() || isSupervisor();
      allow write: if isAdmin();
    }
  }
}


